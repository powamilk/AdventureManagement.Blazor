@page "/participantinteraction/create"
@using AdventureManagement.BUS.ViewModel.ParticipantInteraction
@using AdventureManagement.BUS.Services.Interface
@inject IParticipantInteractionService ParticipantInteractionService
@inject NavigationManager Navigation

<h3>Thêm Participant Interaction Mới</h3>

<EditForm Model="NewParticipantInteraction" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Adventure ID:</label>
        <InputNumber @bind-Value="NewParticipantInteraction.AdventureId" class="form-control" />
    </div>

    <div class="form-group">
        <label>Participant ID:</label>
        <InputNumber @bind-Value="NewParticipantInteraction.ParticipantId" class="form-control" />
    </div>

    <div class="form-group">
        <label>Rating:</label>
        <InputNumber @bind-Value="NewParticipantInteraction.Rating" class="form-control" />
    </div>

    <div class="form-group">
        <label>Comment:</label>
        <InputTextArea @bind-Value="NewParticipantInteraction.Comment" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Lưu</button>
    <button type="button" class="btn btn-secondary" @onclick="GoBack">Hủy</button>
</EditForm>

@code {
    private CreateParticipantInteractionVM NewParticipantInteraction { get; set; } = new CreateParticipantInteractionVM();

    private async Task HandleValidSubmit()
    {
        await ParticipantInteractionService.CreateParticipantInteractionAsync(NewParticipantInteraction);
        Navigation.NavigateTo("/participantinteraction/list");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/participantinteraction/list");
    }
}
