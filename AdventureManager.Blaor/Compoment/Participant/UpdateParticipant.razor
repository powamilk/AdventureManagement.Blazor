@page "/participants/update/{Id:int}"
@using AdventureManagement.BUS.ViewModel.Participant
@using AdventureManagement.BUS.Services.Interface
@inject IParticipantService ParticipantService
@inject NavigationManager Navigation

<div class="container mt-4">
    <h3>Cập Nhật Participant</h3>

    <EditForm Model="ParticipantToUpdate" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="Name" class="form-label">Tên</label>
            <InputText id="Name" class="form-control" @bind-Value="ParticipantToUpdate.Name" />
        </div>

        <div class="mb-3">
            <label for="Email" class="form-label">Email</label>
            <InputText id="Email" class="form-control" @bind-Value="ParticipantToUpdate.Email" />
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-primary">Lưu</button>
            <button type="button" class="btn btn-secondary" @onclick="GoBack">Hủy</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private ParticipantUpdateVM ParticipantToUpdate { get; set; } = new ParticipantUpdateVM();

    protected override async Task OnInitializedAsync()
    {
        var participant = await ParticipantService.GetById(Id);
        if (participant != null)
        {
            ParticipantToUpdate = new ParticipantUpdateVM
                {
                    Id = participant.Id,
                    Name = participant.Name,
                    Email = participant.Email
                };
        }
    }

    private async Task HandleValidSubmit()
    {
        await ParticipantService.Update(Id, ParticipantToUpdate);
        Navigation.NavigateTo("/participant/list");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/participant/list");
    }
}
