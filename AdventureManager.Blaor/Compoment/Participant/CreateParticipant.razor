@page "/participants/create"
@using AdventureManagement.BUS.ViewModel.Participant
@using AdventureManagement.BUS.Services.Interface
@inject IParticipantService ParticipantService
@inject NavigationManager Navigation

<div class="container mt-4">
    <h3>Thêm Participant Mới</h3>

    <EditForm Model="NewParticipant" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="Name" class="form-label">Tên</label>
            <InputText id="Name" class="form-control" @bind-Value="NewParticipant.Name" required />
        </div>

        <div class="mb-3">
            <label for="Email" class="form-label">Email</label>
            <InputText id="Email" class="form-control" @bind-Value="NewParticipant.Email" required />
        </div>

        <button class="btn btn-primary" type="submit">Lưu</button>
        <button class="btn btn-secondary" type="button" @onclick="GoBack">Hủy</button>
    </EditForm>
</div>

@code {
    private ParticipantCreateVM NewParticipant { get; set; } = new ParticipantCreateVM();

    private async Task HandleValidSubmit()
    {
        await ParticipantService.Create(NewParticipant);
        Navigation.NavigateTo("/participant/list");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/participant/list");
    }
}
