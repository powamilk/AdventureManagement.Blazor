@page "/guides/update/{Id:int}"
@using AdventureManagement.BUS.ViewModel.GuideViewModel
@using AdventureManagement.BUS.Services.Interface
@inject IGuideService GuideService
@inject NavigationManager Navigation

<div class="container mt-4">
    <div class="card">
        <div class="card-header">
            <h5>Cập Nhật Guide</h5>
        </div>
        <div class="card-body">
            @if (GuideToUpdate != null)
            {
                <EditForm Model="GuideToUpdate" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="name" class="form-label">Tên</label>
                        <InputText id="name" class="form-control" @bind-Value="GuideToUpdate.Name" required />
                    </div>

                    <div class="mb-3">
                        <label for="expertise" class="form-label">Chuyên môn</label>
                        <InputText id="expertise" class="form-control" @bind-Value="GuideToUpdate.Expertise" required />
                    </div>

                    <div class="mb-3">
                        <label for="experienceYears" class="form-label">Kinh nghiệm (năm)</label>
                        <InputNumber id="experienceYears" class="form-control" @bind-Value="GuideToUpdate.ExperienceYears" required />
                    </div>

                    <button type="submit" class="btn btn-primary">Lưu</button>
                    <button type="button" class="btn btn-secondary" @onclick="GoBack">Hủy</button>
                </EditForm>
            }
            else
            {
                <p>Đang tải dữ liệu...</p>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private UpdateGuideVM GuideToUpdate { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var guide = await GuideService.GetGuideByIdAsync(Id);
        if (guide != null)
        {
            GuideToUpdate = new UpdateGuideVM
                {
                    Id = guide.Id,
                    Name = guide.Name,
                    Expertise = guide.Expertise,
                    ExperienceYears = guide.ExperienceYears
                };
        }
    }

    private async Task HandleValidSubmit()
    {
        await GuideService.UpdateGuideAsync(Id, GuideToUpdate);
        Navigation.NavigateTo("/guide/list");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/guide/list");
    }
}
