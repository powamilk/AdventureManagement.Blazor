@page "/organism/list"
@using AdventureManagement.BUS.ViewModel.OrganismViewModel
@using AdventureManagement.BUS.Services.Interface
@using MudBlazor
@inject IOrganismService OrganismService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Danh sách Organism</h3>

<MudPaper Class="py-6">
    <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Title="Thêm Organism" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" @onclick="AddOrganism" />
    <MudTable Items="@organisms" Hover="true" Dense="true" Bordered="true" Striped="true">
        <HeaderContent>
            <MudTh>Tên</MudTh>
            <MudTh>Mô tả</MudTh>
            <MudTh>Môi trường sống</MudTh>
            <MudTh>Thao Tác</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Tên">@context.Name</MudTd>
            <MudTd DataLabel="Mô tả">@context.Description</MudTd>
            <MudTd DataLabel="Môi trường sống">@context.Habitat</MudTd>
            <MudTd DataLabel="Thao Tác">
                <MudIconButton Icon="@Icons.Material.Filled.Info" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" @onclick="() => ViewDetail(context.Id)" />
                <MudIconButton Icon="@Icons.Material.Filled.Edit" Variant="Variant.Outlined" Color="Color.Secondary" Size="Size.Small" @onclick="() => EditOrganism(context.Id)" />
                <MudIconButton Icon="@Icons.Material.Filled.Delete" aria-label="delete" Variant="Variant.Outlined" Color="Color.Error" Size="Size.Small" @onclick="() => DeleteOrganism(context.Id)" />
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    private List<OrganismVM> organisms = new List<OrganismVM>();

    protected override async Task OnInitializedAsync()
    {
        organisms = await OrganismService.GetAllOrganismsAsync();
    }

    private void AddOrganism()
    {
        Navigation.NavigateTo("/organisms/create");
    }

    private void ViewDetail(int id)
    {
        Navigation.NavigateTo($"/organisms/detail/{id}");
    }

    private void EditOrganism(int id)
    {
        Navigation.NavigateTo($"/organisms/update/{id}");
    }

    private async Task DeleteOrganism(int id)
    {
        var confirmed = await JS.InvokeAsync<bool>("confirm", "Bạn có chắc muốn xóa Organism này?");
        if (confirmed)
        {
            await OrganismService.DeleteOrganismAsync(id);
            organisms = await OrganismService.GetAllOrganismsAsync();
        }
    }
}
