@page "/guide/list"
@using AdventureManagement.BUS.ViewModel.GuideViewModel
@using AdventureManagement.BUS.Services.Interface
@inject IGuideService GuideService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Danh sách Guide</h3>

<div class="d-flex justify-content-end mb-3">
    <button class="btn btn-outline-primary btn-sm" @onclick="AddGuide">
        <i class="material-icons">add_circle</i> Thêm Guide
    </button>
</div>

<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>Tên</th>
            <th>Chuyên môn</th>
            <th>Kinh nghiệm (năm)</th>
            <th>Thao Tác</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var guide in guides)
        {
            <tr>
                <td>@guide.Name</td>
                <td>@guide.Expertise</td>
                <td>@guide.ExperienceYears</td>
                <td>
                    <button class="btn btn-outline-info btn-sm" @onclick="() => ViewDetail(guide.Id)">
                        <i class="material-icons">info</i>
                    </button>
                    <button class="btn btn-outline-secondary btn-sm" @onclick="() => EditGuide(guide.Id)">
                        <i class="material-icons">edit</i>
                    </button>
                    <button class="btn btn-outline-danger btn-sm" @onclick="() => DeleteGuide(guide.Id)">
                        <i class="material-icons">delete</i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<GuideVM> guides = new List<GuideVM>();

    protected override async Task OnInitializedAsync()
    {
        guides = await GuideService.GetAllGuidesAsync();
    }

    private void AddGuide()
    {
        Navigation.NavigateTo("/guides/create");
    }

    private void ViewDetail(int id)
    {
        Navigation.NavigateTo($"/guides/detail/{id}");
    }

    private void EditGuide(int id)
    {
        Navigation.NavigateTo($"/guides/update/{id}");
    }

    private async Task DeleteGuide(int id)
    {
        var confirmed = await JS.InvokeAsync<bool>("confirm", "Bạn có chắc muốn xóa Guide này?");
        if (confirmed)
        {
            await GuideService.DeleteGuideAsync(id);
            guides = await GuideService.GetAllGuidesAsync();
        }
    }
}
