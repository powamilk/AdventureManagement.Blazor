@page "/guide/list"
@using AdventureManagement.BUS.ViewModel.GuideViewModel
@using AdventureManagement.BUS.Services.Interface
@using MudBlazor
@inject IGuideService GuideService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Danh sách Guide</h3>

<MudPaper Class="py-6">
    <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Title="Thêm Guide" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" @onclick="AddGuide" />
    <MudTable Items="@guides" Hover="true" Dense="true" Bordered="true" Striped="true">
        <HeaderContent>
            <MudTh>Tên</MudTh>
            <MudTh>Chuyên môn</MudTh>
            <MudTh>Kinh nghiệm (năm)</MudTh>
            <MudTh>Thao Tác</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Tên">@context.Name</MudTd>
            <MudTd DataLabel="Chuyên môn">@context.Expertise</MudTd>
            <MudTd DataLabel="Kinh nghiệm">@context.ExperienceYears</MudTd>
            <MudTd DataLabel="Thao Tác">
                <MudIconButton Icon="@Icons.Material.Filled.Info" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" @onclick="() => ViewDetail(context.Id)" />
                <MudIconButton Icon="@Icons.Material.Filled.Edit" Variant="Variant.Outlined" Color="Color.Secondary" Size="Size.Small" @onclick="() => EditGuide(context.Id)" />
                <MudIconButton Icon="@Icons.Material.Filled.Delete" aria-label="delete" Variant="Variant.Outlined" Color="Color.Error" Size="Size.Small" @onclick="() => DeleteGuide(context.Id)" />
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    private List<GuideVM> guides = new List<GuideVM>();

    protected override async Task OnInitializedAsync()
    {
        guides = await GuideService.GetAllGuidesAsync();
    }

    private void AddGuide()
    {
        Navigation.NavigateTo("/guides/create");
    }

    private void ViewDetail(int id)
    {
        Navigation.NavigateTo($"/guides/detail/{id}");
    }

    private void EditGuide(int id)
    {
        Navigation.NavigateTo($"/guides/update/{id}");
    }

    private async Task DeleteGuide(int id)
    {
        var confirmed = await JS.InvokeAsync<bool>("confirm", "Bạn có chắc muốn xóa Guide này?");
        if (confirmed)
        {
            await GuideService.DeleteGuideAsync(id);
            guides = await GuideService.GetAllGuidesAsync();
        }
    }
}
